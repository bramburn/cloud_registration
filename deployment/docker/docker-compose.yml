# Cloud Registration Docker Compose Configuration
# Production deployment with data persistence and monitoring

version: '3.8'

services:
  cloudregistration:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: cloudregistration-app
    restart: unless-stopped
    
    environment:
      - DISPLAY=${DISPLAY:-:0}
      - CLOUDREGISTRATION_LOG_LEVEL=INFO
      - CLOUDREGISTRATION_DATA_DIR=/data
      - CLOUDREGISTRATION_LOG_DIR=/app/logs
      - QT_X11_NO_MITSHM=1
      - QT_GRAPHICSSYSTEM=native
    
    volumes:
      # X11 forwarding for GUI
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      
      # Data persistence
      - cloudregistration-data:/data:rw
      - cloudregistration-logs:/app/logs:rw
      
      # Sample data (optional)
      - ../../sample:/app/sample:ro
      
      # Configuration (optional)
      - ./config:/app/config:ro
    
    networks:
      - cloudregistration-net
    
    # Security settings
    security_opt:
      - seccomp:unconfined
    
    # GPU access (uncomment if GPU acceleration needed)
    # devices:
    #   - /dev/dri:/dev/dri
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "-f", "CloudRegistration"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Log aggregation service
  logrotate:
    image: alpine:latest
    container_name: cloudregistration-logrotate
    restart: unless-stopped
    
    volumes:
      - cloudregistration-logs:/logs:rw
    
    command: >
      sh -c "
        while true; do
          find /logs -name '*.log' -size +50M -exec sh -c '
            mv \"$$1\" \"$$1.old\" && 
            touch \"$$1\" && 
            echo \"Rotated log: $$1\"
          ' _ {} \;
          find /logs -name '*.log.old' -mtime +7 -delete
          sleep 3600
        done
      "
    
    networks:
      - cloudregistration-net

  # Optional: Monitoring service
  monitoring:
    image: prom/node-exporter:latest
    container_name: cloudregistration-monitoring
    restart: unless-stopped
    
    ports:
      - "9100:9100"
    
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    
    networks:
      - cloudregistration-net

# Named volumes for data persistence
volumes:
  cloudregistration-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data
  
  cloudregistration-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/logs

# Network configuration
networks:
  cloudregistration-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
