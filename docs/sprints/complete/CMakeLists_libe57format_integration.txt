# CMakeLists.txt modifications for libE57Format integration
# Add these sections to your existing CMakeLists.txt

# ============================================================================
# 1. Add libE57Format package finding (add after existing find_package calls)
# ============================================================================

# Find libE57Format package
find_package(libe57format CONFIG REQUIRED)

# Optional: Print found information for debugging
if(libe57format_FOUND)
    message(STATUS "Found libE57Format: ${libe57format_VERSION}")
    message(STATUS "libE57Format include dirs: ${libe57format_INCLUDE_DIRS}")
    message(STATUS "libE57Format libraries: ${libe57format_LIBRARIES}")
else()
    message(FATAL_ERROR "libE57Format not found. Please install via vcpkg: vcpkg install libe57format")
endif()

# ============================================================================
# 2. Update target linking (modify existing target_link_libraries calls)
# ============================================================================

# For main application
target_link_libraries(CloudRegistration PRIVATE
    Qt6::Core
    Qt6::Widgets
    Qt6::OpenGL
    Qt6::OpenGLWidgets
    libe57format::libe57format  # Add this line
)

# For E57Parser tests
target_link_libraries(E57ParserTests PRIVATE
    Qt6::Core
    Qt6::Test
    gtest
    gtest_main
    libe57format::libe57format  # Add this line
)

# For Sprint 1.2 CompressedVector tests
target_link_libraries(Sprint12CompressedVectorTests PRIVATE
    Qt6::Core
    Qt6::Test
    gtest
    gtest_main
    libe57format::libe57format  # Add this line
)

# For Sprint 1.2 Integration tests
target_link_libraries(Sprint12IntegrationTests PRIVATE
    Qt6::Core
    Qt6::Test
    gtest
    gtest_main
    libe57format::libe57format  # Add this line
)

# ============================================================================
# 3. Optional: Add compile definitions for libE57Format features
# ============================================================================

# Add compile definitions if needed
target_compile_definitions(CloudRegistration PRIVATE
    E57_ENABLE_DIAGNOSTIC_OUTPUT=1  # Enable diagnostic output
    E57_MAX_VERBOSE=1               # Enable verbose logging
)

# ============================================================================
# 4. Optional: Add include directories (usually not needed with modern CMake)
# ============================================================================

# Modern CMake with target_link_libraries should handle includes automatically
# But if needed, you can add:
# target_include_directories(CloudRegistration PRIVATE ${libe57format_INCLUDE_DIRS})

# ============================================================================
# 5. Example of conditional compilation (for gradual migration)
# ============================================================================

# Add option to enable libE57Format integration
option(USE_LIBE57FORMAT "Use libE57Format library for E57 parsing" ON)

if(USE_LIBE57FORMAT)
    target_compile_definitions(CloudRegistration PRIVATE USE_LIBE57FORMAT=1)
    target_link_libraries(CloudRegistration PRIVATE libe57format::libe57format)
    message(STATUS "libE57Format integration enabled")
else()
    message(STATUS "Using custom E57 parser (libE57Format integration disabled)")
endif()

# ============================================================================
# 6. Platform-specific configurations
# ============================================================================

# Windows-specific settings
if(WIN32)
    # Ensure proper linking on Windows
    set_target_properties(CloudRegistration PROPERTIES
        WIN32_EXECUTABLE TRUE
    )
    
    # Copy libE57Format DLLs to output directory (if needed)
    if(USE_LIBE57FORMAT)
        # This might be needed depending on how libE57Format is built
        # add_custom_command(TARGET CloudRegistration POST_BUILD
        #     COMMAND ${CMAKE_COMMAND} -E copy_if_different
        #     $<TARGET_FILE:libe57format::libe57format>
        #     $<TARGET_FILE_DIR:CloudRegistration>
        # )
    endif()
endif()

# ============================================================================
# 7. Testing configuration
# ============================================================================

# Add test for libE57Format integration
if(USE_LIBE57FORMAT AND BUILD_TESTING)
    add_test(NAME LibE57FormatIntegrationTest
        COMMAND Sprint12CompressedVectorTests
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
    )
    
    # Set test properties
    set_tests_properties(LibE57FormatIntegrationTest PROPERTIES
        TIMEOUT 60
        LABELS "integration;libe57format"
    )
endif()

# ============================================================================
# 8. Installation configuration (if needed)
# ============================================================================

# Install libE57Format dependencies if building installer
if(USE_LIBE57FORMAT)
    # This depends on your installation setup
    # install(TARGETS libe57format::libe57format
    #     DESTINATION bin
    #     COMPONENT Runtime
    # )
endif()

# ============================================================================
# 9. Debug configuration
# ============================================================================

# Add debug information for libE57Format
if(CMAKE_BUILD_TYPE STREQUAL "Debug" AND USE_LIBE57FORMAT)
    target_compile_definitions(CloudRegistration PRIVATE
        E57_DEBUG=1
        E57_VALIDATION_LEVEL=3  # Maximum validation
    )
endif()

# ============================================================================
# 10. Version compatibility check
# ============================================================================

# Ensure compatible version of libE57Format
if(USE_LIBE57FORMAT)
    if(libe57format_VERSION VERSION_LESS "3.0.0")
        message(WARNING "libE57Format version ${libe57format_VERSION} is older than recommended (3.0.0+)")
    endif()
    
    if(libe57format_VERSION VERSION_GREATER_EQUAL "4.0.0")
        message(STATUS "Using modern libE57Format version ${libe57format_VERSION}")
    endif()
endif()

# ============================================================================
# Example complete CMakeLists.txt section for reference:
# ============================================================================

# cmake_minimum_required(VERSION 3.16)
# project(CloudRegistration)
# 
# # Find packages
# find_package(Qt6 REQUIRED COMPONENTS Core Widgets OpenGL OpenGLWidgets Test)
# find_package(GTest REQUIRED)
# find_package(libe57format CONFIG REQUIRED)
# 
# # Add executable
# add_executable(CloudRegistration
#     src/main.cpp
#     src/mainwindow.cpp
#     src/e57parser.cpp
#     # ... other sources
# )
# 
# # Link libraries
# target_link_libraries(CloudRegistration PRIVATE
#     Qt6::Core
#     Qt6::Widgets
#     Qt6::OpenGL
#     Qt6::OpenGLWidgets
#     libe57format::libe57format
# )
# 
# # Add tests
# add_executable(E57ParserTests
#     tests/test_e57parser.cpp
#     src/e57parser.cpp
# )
# 
# target_link_libraries(E57ParserTests PRIVATE
#     Qt6::Core
#     Qt6::Test
#     GTest::gtest
#     GTest::gtest_main
#     libe57format::libe57format
# )
